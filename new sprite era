#initialization
import pygame, random, keyboard

# variables
width = 500
height = 600
alienSize = 100
alienX = width / 2
alienY = height - (height / 4) - alienSize

#colours
colourG = 143
colourB = 143
ground = (84, 109, 0)
sky = (164, 221, 237)
sky2 = (171, 146, 255)
white = (255, 255, 255)
black = (0, 0, 0)
pink = (240, 84, 85)
pink2 = (108, 0, 44)
purpatrate = (181, 126, 220)
green = (5, 172, 81)
rouge = (117, 0, 7)
blouge = (38, 73, 61)
yellow = (253, 210, 82)
bleen = (32, 161, 133)
spotify = (69, colourB, colourB)

#setting up classes
class Platforms(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])
        self.image = pygame.image.load("erin.png").convert()
        self.image = pygame.transform.scale(self.image, (100, 30))
        self.rect = self.image.get_rect()

        self.changeX = 0
        self.changeY = 0

class Player(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])
        self.image = pygame.image.load("erin.png").convert()
        self.image = pygame.transform.scale(self.image, (100, 100))
        self.rect = self.image.get_rect()

        self.changeX = 0
        self.changeY = 0
        self.gravity = 0

    def update(self):
        self.rect.x += self.changeX
        self.rect.y -= self.changeY
        self.changeY -= self.gravity

    #checking for left and right boundaries
    def meh(self):
        self.changeX *= -1
    def right(self):
        self.changeX = 2
    def stop(self):
        self.changeY = 0
        self.gravity = 0
    def left(self):
        self.changeX = -2
    def stopX(self):
        self.changeX = 0
    def jump(self):
        self.changeY = 0.25
        self.gravity = 0.007

pygame.init()
pygame.font.init()

#setting up the game screen
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("A Line")

#time and frames?
clock = pygame.time.Clock()
clock.tick(60)

#player screens
displayScreen = "menu"
gaming = True

#Setting up sprite groups
platforms = pygame.sprite.Group()
all = pygame.sprite.Group()
playa = Player(width, height)
playa.rect.x = alienX
playa.rect.y = alienY
all.add(playa)
for i in range (10):
    block = Platforms(width, height)
    block.rect.x = random.randrange(0, width)
    block.rect.y = random.randrange(1, height - (height / 4))
    platforms.add(block)
    all.add(block)

def menu():
#background
    pygame.display.flip()
    screen.fill(black)
    pygame.draw.ellipse(screen, pink, [width / 2 - 700 / 2, height - 500 / 2, 700, 500])

#title
    myfont = pygame.font.SysFont('Consolas', 30)
    title = myfont.render('Get Me Out of Here', False, white)
    screen.blit(title, (100, 250))
    myfont = pygame.font.SysFont('Consolas', 20)
    toPlay = myfont.render('Press [space] to play', False, pink2)
    toInstruct = myfont.render('Press [i] for instructions', False, pink2)
    screen.blit(toPlay, (125, height - 150))
    screen.blit(toInstruct, (100, height - 100))

def instruct():
#background
    pygame.display.flip()
    screen.fill(black)
#text
    myfont = pygame.font.SysFont('Consolas', 20)
    rightInstruct = myfont.render('Press [right] to move right', False, purpatrate)
    leftInstruct = myfont.render('Press [left] to move left', False, purpatrate)
    screen.blit(rightInstruct, (125, height - 150))
    screen.blit(leftInstruct, (100, height - 100))

def play():
   #the ground
    roseybrown = (colourG, colourG, colourG)
    screen.fill(roseybrown)
    pygame.draw.rect(screen, spotify, [0, height - (height / 4), width, height / 4])

   # character
    #pygame.draw.ellipse(screen, blouge, [x, y, size, size])

    all.update()
    all.draw(screen)

def win():
# background
    screen.fill(sky)

def loss():
# background
    screen.fill(white)

while gaming:

    # checking for arrow keys (for going back to the menu screen and player movement)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gaming = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playa.left()
            elif event.key == pygame.K_RIGHT:
                playa.right()
            elif event.key == pygame.K_UP:
                playa.jump()
                if colourG < 255.90:
                    colourG += 0.05
                if colourB > 0.10:
                    colourB -= 0.05
        elif event.type == pygame.KEYUP:
            playa.stopX()
            playa.stop()

    #checking for left and right boundaries
    if playa.rect.x < 0 or playa.rect.x > (width - alienSize):
        playa.meh()

    elif playa.rect.y > height - (height / 4) - alienSize:
        playa.stop()

    #for changing into different screens
    if displayScreen == "menu":
        menu()
        if keyboard.is_pressed('space'):
            displayScreen = "play"
        elif keyboard.is_pressed('i'):
            displayScreen = "instruct"
    elif displayScreen == "instruct":
        instruct()
        if keyboard.is_pressed('escape'):
            displayScreen = "menu"
    elif displayScreen == "play":
        play()
        if keyboard.is_pressed('escape'):
            displayScreen = "menu"

        # for player movement


    #flips the graphics onto the screen
    pygame.display.flip()
pygame.quit()
