#This game is about an undercover alien leaving earth because apocalypse... by Grace
#initialization
import pygame, keyboard, random
pygame.init()

#variables
width = 500
height = 600
alienSize = 50
alienX = width / 2
alienY = height - (height / 4) - alienSize
score = 0
gaming = True
beginScoring = True
seconds = 0
minutes = 0
#colours
white = (255, 255, 255)
black = (0, 0, 0)
yellow = (253, 210, 82)
ground = (84, 109, 0)
green = (5, 172, 81)
bleen = (32, 161, 133)
sky = (164, 221, 237)
sky2 = (171, 146, 255)
trueBlue = (8, 88, 79)
purpatrate = (181, 126, 220)
pink = (240, 84, 85)
pink2 = (108, 0, 44)

#setting up classes (for lives, platforms and the player)
class Lives(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])

        #loading the image and sizing it
        self.image = pygame.image.load("heart.png").convert_alpha()
        self.mask = pygame.mask.from_surface(self.image)
        self.image = pygame.transform.scale(self.image, (35, 30))
        self.rect = self.image.get_rect()
        self.rect.x = 20
        self.rect.y = 20

class Beams(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])

        #loading the image and sizing it
        self.image = pygame.image.load("angel.jpg").convert_alpha()
        self.mask = pygame.mask.from_surface(self.image)
        self.image = pygame.transform.scale(self.image, (15, 25))
        self.rect = self.image.get_rect()
        self.rect.x = alien.rect.x
        self.rect.y = alien.rect.y
        self.changeY = 0.2

    def update(self):
        self.rect.y -= self.changeY

class Eryka(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])

        #loading the image and sizing it
        self.image = pygame.image.load("whale.png").convert_alpha()
        self.mask = pygame.mask.from_surface(self.image)
        self.image = pygame.transform.scale(self.image, (40, 40))
        self.rect = self.image.get_rect()
        self.rect.x = evil.rect.x
        self.rect.y = evil.rect.y
        self.changeY = 1

    def update(self):
        self.rect.y += self.changeY

class Evilness(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])

        #loading the image and sizing it
        self.image = pygame.image.load("whale.png").convert_alpha()
        self.mask = pygame.mask.from_surface(self.image)
        self.image = pygame.transform.scale(self.image, (100, 100))
        self.rect = self.image.get_rect()
        self.rect.x = 200
        self.rect.y = 0
        self.changeX = 0

    def update(self):
        self.rect.x += self.changeX
    def moveme(self):
        self.changeX = random.randint(0, 4)
    def bounce(self):
        self.changeX *= -1



class Player(pygame.sprite.Sprite):
    def __init__(self, width, height):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface([width, height])

        #loading the image and sizing it
        self.image = pygame.image.load("lamb.png").convert_alpha()
        self.mask = pygame.mask.from_surface(self.image)
        self.image = pygame.transform.scale(self.image, (50, 50))

        #defining variables for size, location and jumping
        self.rect = self.image.get_rect()
        self.rect.x = 250
        self.rect.y = height - (height / 4) - alienSize

    def update(self):
        (self.rect.x, self.rect.y) = pos

pygame.init()
pygame.font.init()

#setting up the game screen
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("( ͡° ͜ʖ ͡°)")
myfont = pygame.font.SysFont('Consolas', 20)

#setting time and fps?
clock = pygame.time.Clock()
clock.tick(60)
pygame.time.set_timer(pygame.USEREVENT, 1000)

#setting up sprite groups
antifun = pygame.sprite.Group()
lives = pygame.sprite.Group()
shots = pygame.sprite.Group()
all = pygame.sprite.Group()
alien = Player(width, height)
all.add(alien)
changeHeartX = 106
changePlatY = 400
evil = Evilness(width, height)
all.add(evil)
antifun.add(evil)
for j in range(3):
    heart = Lives(width, height)
    heart.rect.x = changeHeartX
    heart.rect.y = 20
    changeHeartX -= 43
    lives.add(heart)
    all.add(heart)




pygame.mouse.set_visible(False)

def play():
   #the sky
    screen.fill(white)

    #scoreboard
    scoreWrite = myfont.render("Score: " + str(score), False, (46, 72, 89))
    screen.blit(scoreWrite, (width - 110, 20))

   #drawing all sprites (platforms and player)
    all.update()
    all.draw(screen)

while gaming:
    # checking for arrow keys (for going back to the menu screen and player movement)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gaming = False
        if event.type == pygame.USEREVENT and beginScoring == True:
            score += 1
            if seconds / 59 == 1:
                minutes += 1
                seconds = 0
            else:
                seconds += 1
            if seconds % random.randint(3, 5) == 0:
                evil.moveme()
                for s in range(3):
                    mini = Eryka(width, height)
                    mini.rect.x = evil.rect.x
                    mini.rect.y = evil.rect.y
                    antifun.add(mini)
                    all.add(mini)
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                bean = Beams(width, height)
                bean.rect.x = alien.rect.x
                bean.rect.y = alien.rect.y
                shots.add(bean)
                all.add(bean)
    if evil.rect.x < 0 or evil.rect.x > width - 100:
        evil.bounce()

    pos = (pygame.mouse.get_pos()[0], pygame.mouse.get_pos()[1])
    play()

    #flips the graphics onto the screen
    pygame.display.flip()
pygame.quit()
